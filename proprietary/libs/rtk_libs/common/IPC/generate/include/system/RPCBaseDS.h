/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#ifndef _RPCBASEDS_H_RPCGEN
#define _RPCBASEDS_H_RPCGEN

#include <../../../include/RPCstruct.h>

#include "RPCBaseDS_data.h"

#ifdef __cplusplus
extern "C" {
#endif


/* the xdr functions */

#if defined(__STDC__) || defined(__cplusplus)
extern  bool_t xdr_HRESULT (XDR *, HRESULT*);
extern  bool_t xdr_RPCRES_LONG (XDR *, RPCRES_LONG*);
extern  bool_t xdr_USB_DEVICE_CONFIG_INFO (XDR *, USB_DEVICE_CONFIG_INFO*);
extern  bool_t xdr_RPC_CONNECTION (XDR *, RPC_CONNECTION*);
extern  bool_t xdr_RPC_SEND_LONG (XDR *, RPC_SEND_LONG*);
extern  bool_t xdr_VIDEO_IMG_TYPE (XDR *, VIDEO_IMG_TYPE*);
extern  bool_t xdr_VIDEO_LOW_DELAY (XDR *, VIDEO_LOW_DELAY*);
extern  bool_t xdr_VIDEO_VF_TYPE (XDR *, VIDEO_VF_TYPE*);
extern  bool_t xdr_TVE_BOARD_TYPE (XDR *, TVE_BOARD_TYPE*);
extern  bool_t xdr_VIDEO_BUFFER_TYPE (XDR *, VIDEO_BUFFER_TYPE*);
extern  bool_t xdr_VIDEO_DNR_MODE (XDR *, VIDEO_DNR_MODE*);
extern  bool_t xdr_VIDEO_COLOR_FMT (XDR *, VIDEO_COLOR_FMT*);
extern  bool_t xdr_SP_STREAM_TYPE (XDR *, SP_STREAM_TYPE*);
extern  bool_t xdr_VO_COLOR (XDR *, VO_COLOR*);
extern  bool_t xdr_VO_OSD_COLOR_FORMAT (XDR *, VO_OSD_COLOR_FORMAT*);
extern  bool_t xdr_VO_GRAPHIC_STORAGE_MODE (XDR *, VO_GRAPHIC_STORAGE_MODE*);
extern  bool_t xdr_VIDEO_JPEG_MIRROR (XDR *, VIDEO_JPEG_MIRROR*);
extern  bool_t xdr_VIDEO_JPEG_ROTATION (XDR *, VIDEO_JPEG_ROTATION*);
extern  bool_t xdr_VO_RECTANGLE (XDR *, VO_RECTANGLE*);
extern  bool_t xdr_MIXER_WIN (XDR *, MIXER_WIN*);
extern  bool_t xdr_VIDEO_RPC_JPEG_DEC (XDR *, VIDEO_RPC_JPEG_DEC*);
extern  bool_t xdr_VIDEO_INIT_DATA (XDR *, VIDEO_INIT_DATA*);
extern  bool_t xdr_VIDEO_CONFIG_DATA (XDR *, VIDEO_CONFIG_DATA*);
extern  bool_t xdr_VIDEO_RPC_INSTANCE (XDR *, VIDEO_RPC_INSTANCE*);
extern  bool_t xdr_VIDEO_RPC_SET_REFCLOCK (XDR *, VIDEO_RPC_SET_REFCLOCK*);
extern  bool_t xdr_VIDEO_RPC_REQUEST_BUFFER (XDR *, VIDEO_RPC_REQUEST_BUFFER*);
extern  bool_t xdr_VIDEO_RPC_LOW_DELAY (XDR *, VIDEO_RPC_LOW_DELAY*);
extern  bool_t xdr_ENUM_VIDEO_DEC_PRIVATEINFO (XDR *, ENUM_VIDEO_DEC_PRIVATEINFO*);
extern  bool_t xdr_VIDEO_RPC_DEC_PRIVATEINFO_INPUT_PARAMETERS (XDR *, VIDEO_RPC_DEC_PRIVATEINFO_INPUT_PARAMETERS*);
extern  bool_t xdr_VIDEO_RPC_DEC_PRIVATEINFO_OUTPUT_PARAMETERS (XDR *, VIDEO_RPC_DEC_PRIVATEINFO_OUTPUT_PARAMETERS*);
extern  bool_t xdr_VIDEO_MEM_CHUNK (XDR *, VIDEO_MEM_CHUNK*);
extern  bool_t xdr_VIDEO_RPC_VIDEO_FREE_MEMORY (XDR *, VIDEO_RPC_VIDEO_FREE_MEMORY*);
extern  bool_t xdr_VIDEO_RPC_CONFIG_CHUNK (XDR *, VIDEO_RPC_CONFIG_CHUNK*);
extern  bool_t xdr_YUV_FMT (XDR *, YUV_FMT*);
extern  bool_t xdr_IMG_TARGET_FORMAT (XDR *, IMG_TARGET_FORMAT*);
extern  bool_t xdr_VIDEO_RPC_YUYV_TO_RGB (XDR *, VIDEO_RPC_YUYV_TO_RGB*);
extern  bool_t xdr_VIDEO_RPC_DEBUG_MEMORY (XDR *, VIDEO_RPC_DEBUG_MEMORY*);
extern  bool_t xdr_VIDEO_CODEC_CONTROL_BIT (XDR *, VIDEO_CODEC_CONTROL_BIT*);
extern  bool_t xdr_VIDEO_DECODER_CC_BYPASS_MODE (XDR *, VIDEO_DECODER_CC_BYPASS_MODE*);
extern  bool_t xdr_VIDEO_STREAM_TYPE (XDR *, VIDEO_STREAM_TYPE*);
extern  bool_t xdr_RPC_RINGBUFFER (XDR *, RPC_RINGBUFFER*);
extern  bool_t xdr_VIDEO_RPC_ENDOFSTREAM (XDR *, VIDEO_RPC_ENDOFSTREAM*);
extern  bool_t xdr_VIDEO_RPC_DEC_JPEG_INFO (XDR *, VIDEO_RPC_DEC_JPEG_INFO*);
extern  bool_t xdr_VIDEO_RPC_DEC_JPEG_CTRL (XDR *, VIDEO_RPC_DEC_JPEG_CTRL*);
extern  bool_t xdr_VIDEO_RPC_ENC_AUTOPAUSE (XDR *, VIDEO_RPC_ENC_AUTOPAUSE*);
extern  bool_t xdr_VIDEO_RPC_DEC_ERROR_INFO (XDR *, VIDEO_RPC_DEC_ERROR_INFO*);
extern  bool_t xdr_VIDEO_RPC_DEC_MESSAGE (XDR *, VIDEO_RPC_DEC_MESSAGE*);

#else /* K&R C */
extern bool_t xdr_HRESULT ();
extern bool_t xdr_RPCRES_LONG ();
extern bool_t xdr_USB_DEVICE_CONFIG_INFO ();
extern bool_t xdr_RPC_CONNECTION ();
extern bool_t xdr_RPC_SEND_LONG ();
extern bool_t xdr_VIDEO_IMG_TYPE ();
extern bool_t xdr_VIDEO_LOW_DELAY ();
extern bool_t xdr_VIDEO_VF_TYPE ();
extern bool_t xdr_TVE_BOARD_TYPE ();
extern bool_t xdr_VIDEO_BUFFER_TYPE ();
extern bool_t xdr_VIDEO_DNR_MODE ();
extern bool_t xdr_VIDEO_COLOR_FMT ();
extern bool_t xdr_SP_STREAM_TYPE ();
extern bool_t xdr_VO_COLOR ();
extern bool_t xdr_VO_OSD_COLOR_FORMAT ();
extern bool_t xdr_VO_GRAPHIC_STORAGE_MODE ();
extern bool_t xdr_VIDEO_JPEG_MIRROR ();
extern bool_t xdr_VIDEO_JPEG_ROTATION ();
extern bool_t xdr_VO_RECTANGLE ();
extern bool_t xdr_MIXER_WIN ();
extern bool_t xdr_VIDEO_RPC_JPEG_DEC ();
extern bool_t xdr_VIDEO_INIT_DATA ();
extern bool_t xdr_VIDEO_CONFIG_DATA ();
extern bool_t xdr_VIDEO_RPC_INSTANCE ();
extern bool_t xdr_VIDEO_RPC_SET_REFCLOCK ();
extern bool_t xdr_VIDEO_RPC_REQUEST_BUFFER ();
extern bool_t xdr_VIDEO_RPC_LOW_DELAY ();
extern bool_t xdr_ENUM_VIDEO_DEC_PRIVATEINFO ();
extern bool_t xdr_VIDEO_RPC_DEC_PRIVATEINFO_INPUT_PARAMETERS ();
extern bool_t xdr_VIDEO_RPC_DEC_PRIVATEINFO_OUTPUT_PARAMETERS ();
extern bool_t xdr_VIDEO_MEM_CHUNK ();
extern bool_t xdr_VIDEO_RPC_VIDEO_FREE_MEMORY ();
extern bool_t xdr_VIDEO_RPC_CONFIG_CHUNK ();
extern bool_t xdr_YUV_FMT ();
extern bool_t xdr_IMG_TARGET_FORMAT ();
extern bool_t xdr_VIDEO_RPC_YUYV_TO_RGB ();
extern bool_t xdr_VIDEO_RPC_DEBUG_MEMORY ();
extern bool_t xdr_VIDEO_CODEC_CONTROL_BIT ();
extern bool_t xdr_VIDEO_DECODER_CC_BYPASS_MODE ();
extern bool_t xdr_VIDEO_STREAM_TYPE ();
extern bool_t xdr_RPC_RINGBUFFER ();
extern bool_t xdr_VIDEO_RPC_ENDOFSTREAM ();
extern bool_t xdr_VIDEO_RPC_DEC_JPEG_INFO ();
extern bool_t xdr_VIDEO_RPC_DEC_JPEG_CTRL ();
extern bool_t xdr_VIDEO_RPC_ENC_AUTOPAUSE ();
extern bool_t xdr_VIDEO_RPC_DEC_ERROR_INFO ();
extern bool_t xdr_VIDEO_RPC_DEC_MESSAGE ();

#endif /* K&R C */

#ifdef __cplusplus
}
#endif

#endif /* !_RPCBASEDS_H_RPCGEN */
