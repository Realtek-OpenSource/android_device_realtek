#ifndef __MHL_RCP_PRIV_H__
#define __MHL_RCP_PRIV_H__

#define DEV_REMOTE  "/dev/input/event0"

#define THREAD_ENABLED		0x01
#define THREAD_EXIT 		0x80

#define RCP_KEY_RELEASE	0x80

typedef enum {
    // Navigation control
    KEYCODE_DPAD_UP     = 103,
    KEYCODE_DPAD_DOWN   = 108,
    KEYCODE_DPAD_LEFT   = 105,
    KEYCODE_DPAD_RIGHT  = 106,
    KEYCODE_ENTER       = 352,
    KEYCODE_HOME        = 102,
    KEYCODE_MENU        = 357,
    KEYCODE_BACK        = 158,

    // Volume control
    KEYCODE_VOLUME_UP   = 115,
    KEYCODE_VOLUME_DOWN = 114,
    KEYCODE_VOLUME_MUTE = 113,

    // Playback control
    KEYCODE_PLAY        = 207,
    KEYCODE_PAUSE       = 207,
    KEYCODE_STOP        = 128,
    KEYCODE_FFWD        = 208,
    KEYCODE_FRWD        = 168,
    KEYCODE_NEXT        = 407,
    KEYCODE_PREV        = 412,

    // Number key
    KEYCODE_ESC         = 1,
    KEYCODE_1           = 2,
    KEYCODE_2           = 3,
    KEYCODE_3           = 4,
    KEYCODE_4           = 5,
    KEYCODE_5           = 6,
    KEYCODE_6           = 7,
    KEYCODE_7           = 8,
    KEYCODE_8           = 9,
    KEYCODE_9           = 10,
    KEYCODE_0           = 11,

    // Color key: not implemented so far
    KEYCODE_OPTION_BLUE    = -1,
    KEYCODE_OPTION_RED     = -1,
    KEYCODE_OPTION_GREEN   = -1,
    KEYCODE_OPTION_YELLOW  = -1,
    KEYCODE_NONE        = -1,

}MHL_RTK_Android_Key;

typedef enum {
	MHL_RCP_KEY_SELECT = 0x00,
	MHL_RCP_KEY_UP = 0x01,
	MHL_RCP_KEY_DOWN = 0x02,
	MHL_RCP_KEY_LEFT = 0x03,
	MHL_RCP_KEY_RIGHT = 0x04,
	MHL_RCP_KEY_RIGHT_UP = 0x05,
	MHL_RCP_KEY_RIGHT_DOWN = 0x06,
	MHL_RCP_KEY_LEFT_UP = 0x07,
	MHL_RCP_KEY_LEFT_DOWN = 0x08,
	MHL_RCP_KEY_ROOT_MENU = 0x09,
	MHL_RCP_KEY_SETUP_MENU = 0x0A,
	MHL_RCP_KEY_CONTENTS_MENU = 0x0B,
	MHL_RCP_KEY_FAVORITE_MENU = 0x0C,
	MHL_RCP_KEY_EXIT = 0x0D,
	// 0x0E ~ 0x1F reserved
	MHL_RCP_KEY_NUMERIC_0 = 0x20,
	MHL_RCP_KEY_NUMERIC_1 = 0x21,
	MHL_RCP_KEY_NUMERIC_2 = 0x22,
	MHL_RCP_KEY_NUMERIC_3 = 0x23,
	MHL_RCP_KEY_NUMERIC_4 = 0x24,
	MHL_RCP_KEY_NUMERIC_5 = 0x25,
	MHL_RCP_KEY_NUMERIC_6 = 0x26,
	MHL_RCP_KEY_NUMERIC_7 = 0x27,
	MHL_RCP_KEY_NUMERIC_8 = 0x28,
	MHL_RCP_KEY_NUMERIC_9 = 0x29,
	MHL_RCP_KEY_DOT = 0x2A,
	MHL_RCP_KEY_ENTER = 0x2B,
	MHL_RCP_KEY_CLEAR = 0x2C,
	// 0x2D ~ 0x2F reserved
	MHL_RCP_KEY_CHANNEL_UP = 0x30,
	MHL_RCP_KEY_CHANNEL_DOWN = 0x31,
	MHL_RCP_KEY_PREVIOUS_CHANNEL = 0x32,
	MHL_RCP_KEY_SOUND_SELECT = 0x33,
	MHL_RCP_KEY_INPUT_SELECT = 0x34,
	MHL_RCP_KEY_SHOW_INFORMATION = 0x35,
	MHL_RCP_KEY_HELP = 0x36,
	MHL_RCP_KEY_PAGE_UP = 0x37,
	MHL_RCP_KEY_PAGE_DOWN = 0x38,
	// 0x39 ~ 0x3F reserved
	// 0x40 reserved
	MHL_RCP_KEY_VOLUME_UP = 0x41,
	MHL_RCP_KEY_VOLUME_DOWN = 0x42,
	MHL_RCP_KEY_MUTE = 0x43,
	MHL_RCP_KEY_PLAY = 0x44,
	MHL_RCP_KEY_STOP = 0x45,
	MHL_RCP_KEY_PAUSE = 0x46,
	MHL_RCP_KEY_RECORD = 0x47,
	MHL_RCP_KEY_REWIND = 0x48,
	MHL_RCP_KEY_FASTFORWARD = 0x49,
	MHL_RCP_KEY_EJECT = 0x4A,
	MHL_RCP_KEY_FORWARD = 0x4B,
	MHL_RCP_KEY_BACKWARD = 0x4C,
	// 0x4D ~ 0x4F reserved
	MHL_RCP_KEY_ANGLE = 0x50,
	MHL_RCP_KEY_SUBPICTURE = 0x51,
	// 0x52 ~ 0x5F reserved
	MHL_RCP_KEY_PLAY_FUNCTION = 0x60,
	MHL_RCP_KEY_PAUSE_PLAY_FUNCTION = 0x61,
	MHL_RCP_KEY_RECORD_FUNCTION = 0x62,
	MHL_RCP_KEY_PAUSE_RECORD_FUNCTION = 0x63,
	MHL_RCP_KEY_STOP_FUNCITON = 0x64,
	MHL_RCP_KEY_MUTE_FUNCTION = 0x65,
	MHL_RCP_KEY_RESOTRE_VOLUME_FUNCTION = 0x66,
	MHL_RCP_KEY_TUNE_FUNCTION = 0x67,
	MHL_RCP_KEY_SELECT_MEDIA_FUNCTION = 0x68,
	// 0x69 reserved
	// 0x6A reserved
	// 0x6B ~ 0x70 reserved
	MHL_RCP_KEY_F1 = 0x71,
	MHL_RCP_KEY_F2 = 0x72,
	MHL_RCP_KEY_F3 = 0x73,
	MHL_RCP_KEY_F4 = 0x74,
	MHL_RCP_KEY_F5 = 0x75,
	// 0x76 ~ 0x7D reserved
	MHL_RCP_KEY_VENDOR_SPECIFIC = 0x7E
	// 0x7F reserved
} MHL_RCP_KEY_ID;

typedef struct map_rtkcmd_rcpcode
{
    MHL_RTK_Android_Key Key;
    MHL_RCP_KEY_ID RCPUserCode;
} MAP_RTKCMD_RCPCODE;


MAP_RTKCMD_RCPCODE local_MHLRCP2Android_cmdmap[]={
	{KEYCODE_ENTER, MHL_RCP_KEY_SELECT},
	{KEYCODE_DPAD_UP, MHL_RCP_KEY_UP},
	{KEYCODE_DPAD_DOWN, MHL_RCP_KEY_DOWN},
	{KEYCODE_DPAD_LEFT, MHL_RCP_KEY_LEFT},
	{KEYCODE_DPAD_RIGHT, MHL_RCP_KEY_RIGHT},
	{KEYCODE_DPAD_RIGHT, MHL_RCP_KEY_RIGHT_UP},
	{KEYCODE_DPAD_RIGHT, MHL_RCP_KEY_RIGHT_DOWN},
	{KEYCODE_DPAD_LEFT, MHL_RCP_KEY_LEFT_UP},
	{KEYCODE_DPAD_LEFT, MHL_RCP_KEY_LEFT_DOWN},
	{KEYCODE_HOME, MHL_RCP_KEY_ROOT_MENU},
	{KEYCODE_MENU, MHL_RCP_KEY_SETUP_MENU},
	{KEYCODE_MENU, MHL_RCP_KEY_CONTENTS_MENU},
	{KEYCODE_NONE, MHL_RCP_KEY_FAVORITE_MENU},//We Don't have now.
	{KEYCODE_BACK, MHL_RCP_KEY_EXIT},
	{KEYCODE_0, MHL_RCP_KEY_NUMERIC_0},
	{KEYCODE_1, MHL_RCP_KEY_NUMERIC_1},
	{KEYCODE_2, MHL_RCP_KEY_NUMERIC_2},
	{KEYCODE_3, MHL_RCP_KEY_NUMERIC_3},
	{KEYCODE_4, MHL_RCP_KEY_NUMERIC_4},
	{KEYCODE_5, MHL_RCP_KEY_NUMERIC_5},
	{KEYCODE_6, MHL_RCP_KEY_NUMERIC_6},
	{KEYCODE_7, MHL_RCP_KEY_NUMERIC_7},
	{KEYCODE_8, MHL_RCP_KEY_NUMERIC_8},
	{KEYCODE_9, MHL_RCP_KEY_NUMERIC_9},
	{KEYCODE_NONE,	MHL_RCP_KEY_DOT},	// we don't have it now.
	{KEYCODE_ENTER, MHL_RCP_KEY_ENTER},
	{KEYCODE_ESC, MHL_RCP_KEY_CLEAR},	//We Don't have now.
	{KEYCODE_NONE, MHL_RCP_KEY_CHANNEL_UP},	//We Don't have now.
	{KEYCODE_NONE, MHL_RCP_KEY_CHANNEL_DOWN},	//We Don't have now.
	{KEYCODE_NONE, MHL_RCP_KEY_PREVIOUS_CHANNEL},	//We Don't have now.
	{KEYCODE_NONE, MHL_RCP_KEY_SOUND_SELECT},	//We Don't have now.
	{KEYCODE_NONE, MHL_RCP_KEY_INPUT_SELECT},	//We Don't have now.
	{KEYCODE_NONE, MHL_RCP_KEY_SHOW_INFORMATION},	//We Don't have now.
	{KEYCODE_NONE, MHL_RCP_KEY_HELP},	//We Don't have now.
	{KEYCODE_NONE, MHL_RCP_KEY_PAGE_UP},	//We Don't have now.
	{KEYCODE_NONE, MHL_RCP_KEY_PAGE_DOWN},	//We Don't have now.
	{KEYCODE_VOLUME_UP, MHL_RCP_KEY_VOLUME_UP},
	{KEYCODE_VOLUME_DOWN, MHL_RCP_KEY_VOLUME_DOWN},
	{KEYCODE_VOLUME_MUTE, MHL_RCP_KEY_MUTE},
	{KEYCODE_PLAY, MHL_RCP_KEY_PLAY},
	{KEYCODE_STOP, MHL_RCP_KEY_STOP},
	{KEYCODE_PAUSE, MHL_RCP_KEY_PAUSE},
	{KEYCODE_NONE, MHL_RCP_KEY_RECORD},	//We Don't have now.
	{KEYCODE_FRWD, MHL_RCP_KEY_REWIND},
	{KEYCODE_FFWD, MHL_RCP_KEY_FASTFORWARD},
	{KEYCODE_NONE, MHL_RCP_KEY_EJECT}, //We Don't have now.
	{KEYCODE_NEXT, MHL_RCP_KEY_FORWARD},
	{KEYCODE_PREV, MHL_RCP_KEY_BACKWARD},
	{KEYCODE_NONE, MHL_RCP_KEY_ANGLE},
	{KEYCODE_MENU, MHL_RCP_KEY_SUBPICTURE},
	{KEYCODE_PLAY, MHL_RCP_KEY_PLAY_FUNCTION},
	{KEYCODE_PAUSE, MHL_RCP_KEY_PAUSE_PLAY_FUNCTION},
	{KEYCODE_NONE, MHL_RCP_KEY_RECORD_FUNCTION},	//We Don't have now.
	{KEYCODE_NONE, MHL_RCP_KEY_PAUSE_RECORD_FUNCTION},	//We Don't have now.
	{KEYCODE_STOP, MHL_RCP_KEY_STOP_FUNCITON},
	{KEYCODE_VOLUME_MUTE, MHL_RCP_KEY_MUTE_FUNCTION},
	{KEYCODE_NONE, MHL_RCP_KEY_RESOTRE_VOLUME_FUNCTION},	//We Don't have now.
	{KEYCODE_NONE, MHL_RCP_KEY_TUNE_FUNCTION},	//We Don't have now.
	{KEYCODE_NONE, MHL_RCP_KEY_SELECT_MEDIA_FUNCTION},	//We Don't have now.
	{KEYCODE_OPTION_BLUE, MHL_RCP_KEY_F1},
	{KEYCODE_OPTION_RED, MHL_RCP_KEY_F2},
	{KEYCODE_OPTION_GREEN, MHL_RCP_KEY_F3},
	{KEYCODE_OPTION_YELLOW, MHL_RCP_KEY_F4},
	{KEYCODE_NONE, MHL_RCP_KEY_F5},	//We Don't have now.
	{KEYCODE_NONE, MHL_RCP_KEY_VENDOR_SPECIFIC} //We Don't have now.
    };

#endif
